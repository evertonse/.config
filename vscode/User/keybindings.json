// Place your key bindings in this file to override the defaultsauto[]
[
    //>> ** MODIFIED BY ME **
  
  {
    "key": "space f",
    "command": "workbench.action.quickOpen",
    "when":"filesExplorerFocus && !terminalFocus"
  },
  {
    "key": "alt+i",
    "command": "workbench.action.terminal.toggleTerminal",    
    "when": "terminal.active"
  },
  {
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key":     "alt+i",
    "command": "workbench.action.terminal.focus",
    "when": "!terminal.active"
  },
  {
      "key":     "alt+i",
      "command": "-workbench.action.focusActiveEditorGroup",
      "when":    "terminalFocus"
  },
  {
    "key": "ctrl+up",
    "command": "cursorMove",
    "args": {
        "to": "prevBlankLine",
        // "select": true
    },
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+down",
    "command": "cursorMove",
    "args": {
        "to": "nextBlankLine",
        // "select": true
    },
  },
  {
    "key": "space e",
    "command": "workbench.view.explorer",
    "when": "!editorTextFocus && !terminalFocus"
  },
  {
    "key": "space c",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!editorTextFocus && !terminalFocus"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  // >> FILE EXPLORER
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
  },
  {
    "key": "m f",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    //"when": "explorerViewletVisible && filesExplorerFocus && !terminalFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    //"when": "explorerViewletVisible && filesExplorerFocus && !terminalFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "s",
    "command": "revealFileInOS",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    //"when": "explorerViewletVisible && filesExplorerFocus && !terminalFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "m d",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    
    //"when": "explorerViewletVisible && filesExplorerFocus && !terminalFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // << FILE EXPLORER
  {
    "key": "ctrl+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "shift+alt+r",
    "command": "-java.view.package.revealFileInOS",
    "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
  },
  {
    "key": "ctrl+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "shift+e",
    "command": ""
  },
  {
    "key": "f2",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+x",
    "command": "-filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "up",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.banner.focusPreviousAction",
    "when": "bannerFocused"
  },
  {
    "key": "up",
    "command": "-workbench.banner.focusPreviousAction",
    "when": "bannerFocused"
  },
  {
    "key": "ctrl+shift+n",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "up",
    "command": "-showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "-showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "extension.vim_cmd+alt+down",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "shift+alt+down",
    "command": "extension.vim_cmd+alt+down",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "shift+alt+k",
    "command": "extension.vim_cmd+alt+up",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "shift+alt+up",
    "command": "extension.vim_cmd+alt+up",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "notebook.cell.moveDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f12",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "shift+alt+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
},
{
    "key": "ctrl+n",
    "command": "history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
},
{
    "key": "down",
    "command": "-history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
},
{
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
},
{
    "key": "down",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
},
{
    "key": "ctrl+n",
    "command": "workbench.action.terminal.selectNextSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
},
{
    "key": "down",
    "command": "-workbench.action.terminal.selectNextSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
},
{
    "key": "ctrl+n",
    "command": "workbench.banner.focusNextAction",
    "when": "bannerFocused"
},
{
    "key": "down",
    "command": "-workbench.banner.focusNextAction",
    "when": "bannerFocused"
},
{
    "key": "ctrl+n",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
},
{
    "key": "down",
    "command": "-workbench.statusBar.focusNext",
    "when": "statusBarFocused"
},
{
    "key": "ctrl+n",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
},
{
    "key": "down",
    "command": "-editor.action.scrollDownHover",
    "when": "editorHoverFocused"
},
{
    "key": "ctrl+n",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
},
{
    "key": "down",
    "command": "-breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
},
{
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "textInputFocus"
},
{
    "key": "down",
    "command": "-cursorDown",
    "when": "textInputFocus"
},
{
    "key": "ctrl+n",
    "command": "editor.action.selectNextStickyScrollLine",
    "when": "stickyScrollFocused"
},
{
    "key": "down",
    "command": "-editor.action.selectNextStickyScrollLine",
    "when": "stickyScrollFocused"
},
{
    "key": "ctrl+n",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
},
{
    "key": "down",
    "command": "-interactive.history.next",
    "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
},
{
    "key": "ctrl+n",
    "command": "interactiveEditor.arrowOutDown",
    "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorLast"
},
{
    "key": "down",
    "command": "-interactiveEditor.arrowOutDown",
    "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorLast"
},
{
    "key": "ctrl+n",
    "command": "interactiveEditor.focus",
    "when": "editorTextFocus && interactiveEditorVisible && !interactiveEditorFocused && interactiveEditorOuterCursorPosition == 'above'"
},
{
    "key": "down",
    "command": "-interactiveEditor.focus",
    "when": "editorTextFocus && interactiveEditorVisible && !interactiveEditorFocused && interactiveEditorOuterCursorPosition == 'above'"
},
{
    "key": "ctrl+n",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
},
{
    "key": "down",
    "command": "-notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
},
{
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
    "key": "ctrl+n",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
},
{
    "key": "down",
    "command": "-workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
},
{
    "key": "ctrl+n",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
},
{
    "key": "down",
    "command": "-settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
},
{
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
},
{
    "key": "down",
    "command": "-selectNextCodeAction",
    "when": "codeActionMenuVisible"
},
{
    "key": "ctrl+n",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
},
{
    "key": "down",
    "command": "-settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
},
{
    "key": "ctrl+n",
    "command": "notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
},
{
    "key": "down",
    "command": "-notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
},
{
    "key": "ctrl+n",
    "command": "notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
},
{
    "key": "down",
    "command": "-notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
},
{
    "key": "ctrl+n",
    "command": "scm.viewNextCommit",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
},
{
    "key": "down",
    "command": "-scm.viewNextCommit",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
},
{
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
},
{
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
},
{
    "key": "tab",
    "command": "-jumpToNextSnippetPlaceholder",
    "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
},
]